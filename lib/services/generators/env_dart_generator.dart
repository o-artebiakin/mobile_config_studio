import '../../providers/config_provider.dart';
import '../../utils/key_formatter.dart';
class EnvDartGenerator {
  /// Generate a Dart env.dart file with String.fromEnvironment calls
  String generate(ConfigState state) {
    final buffer = StringBuffer();

    // File header
    buffer.writeln('// coverage:ignore-file');
    buffer.writeln('// GENERATED CODE - DO NOT MODIFY BY HAND');
    buffer.writeln('// Generated by Mobile Config Studio');
    buffer.writeln('');
    buffer.writeln('final class Env {');
    buffer.writeln('  const Env._();');
    buffer.writeln('');

    // Group all keys by group
    for (final flavor in state.flavors) {
      for (final group in flavor.groups) {
        // Add group comment with snake_case uppercase
        final groupComment = KeyFormatter.toSnakeCase(group.name).toUpperCase();
        buffer.writeln('  // $groupComment');
        
        for (final key in group.keys) {
          final formattedKey = KeyFormatter.formatKey(group.name, key.key);
          final fieldName = _toFieldName(group.name, key.key);
          
          buffer.writeln('  static const $fieldName = String.fromEnvironment(\'$formattedKey\');');
        }
        
        buffer.writeln('');
      }
      
      // Only process first flavor to avoid duplicates
      break;
    }

    buffer.writeln('}');

    return buffer.toString();
  }

  /// Convert to field name (camelCase with group prefix)
  String _toFieldName(String groupName, String keyName) {
    final group = KeyFormatter.toCamelCase(groupName);
    final key = KeyFormatter.toCamelCase(keyName);
    
    // First letter of group should be lowercase
    final groupLower = group[0].toLowerCase() + group.substring(1);
    
    // First letter of key should be uppercase for concatenation
    final keyUpper = key[0].toUpperCase() + key.substring(1);
    
    return '$groupLower$keyUpper';
  }
}
